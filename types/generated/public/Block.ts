// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type { UserId } from "./User";
import type { ColumnType, Selectable, Insertable, Updateable } from "kysely";

/** Identifier type for public.block */
export type BlockId = string & { __brand: "public.block" };

/** Represents the table public.block */
export default interface BlockTable {
  id: ColumnType<BlockId, BlockId | undefined, BlockId>;

  type: ColumnType<string, string, string>;

  content: ColumnType<string, string, string>;

  fields: ColumnType<unknown, unknown | undefined, unknown>;

  tags: ColumnType<string[], string[] | undefined, string[]>;

  links: ColumnType<string[], string[] | undefined, string[]>;

  file_path: ColumnType<string, string, string>;

  parent_id: ColumnType<BlockId | null, BlockId | null, BlockId | null>;

  depth: ColumnType<number, number, number>;

  order: ColumnType<number, number, number>;

  created_at: ColumnType<Date, Date | string | undefined, Date | string>;

  updated_at: ColumnType<Date, Date | string | undefined, Date | string>;

  transclusions: ColumnType<string[], string[] | undefined, string[]>;

  user_id: ColumnType<UserId, UserId, UserId>;

  // FIX: Added the version column to match the database schema
  version: ColumnType<number, number | undefined, number>;
}

export type Block = Selectable<BlockTable>;

export type NewBlock = Insertable<BlockTable>;

export type BlockUpdate = Updateable<BlockTable>;
